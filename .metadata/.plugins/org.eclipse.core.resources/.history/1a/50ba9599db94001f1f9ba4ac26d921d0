/*
 * fsm_automatic.c
 *
 *  Created on: 27 Oct 2024
 *      Author: PC
 */

#include "fsm_automatic.h"

int bool = 0;
int counter = 0;
int i = 5, j = 2, t = 3;
int test = 1, random = 1, dem = 2;
int max_Red = 5, max_Yellow = 2, max_Green = 3, turn = 0;



void case1() {

	switch(counter){
	case 0:
		LED_RED_1();
		if (random == 1) {
			display7SEG(i / 10);
		} else {
			display7SEG(i % 10);
		}
		if(dem == 0){
			i--;
		}
		if(i == 0) {
			i = max_Red;
			counter++;
		}
		break;
	case 1:
		LED_YELLOW_1();
		if (random == 1) {
			display7SEG(j / 10);
		} else {
			display7SEG(j % 10);
		}
		if(dem == 0){
			j--;
		}
		if(j == 0) {
			j = max_Yellow;
			counter++;
		}
		break;
	case 2:
		LED_GREEN_1();
		if (random == 1) {
			display7SEG(t / 10);
		} else {
			display7SEG(t % 10);
		}
		if(dem == 0){
			t--;
		}
		if(t == 0) {
			t = max_Green;
			0;
		}
		break;
	}

//	switch (bool) {
//	case 0:
//		LED_RED_1();
//		if (random == 1) {
//			display7SEG(i / 10);
//		} else {
//			display7SEG(i % 10);
//		}
//		if (dem == 0) {
//			i--;
//		}
//		switch (test) {
//			case 1:
//				LED_GREEN_2();
//				if (random == 1) {
//					display7SEG_1(t / 10);
//				} else {
//					display7SEG_1(t % 10);
//				}
//				if (dem == 0) {
//					t--;
//				}
//				break;
//			default:
//				LED_YELLOW_2();
//				if (random == 1) {
//					display7SEG_1(j / 10);
//				} else {
//					display7SEG_1(j % 10);
//				}
//				if (dem == 0) {
//					j--;
//				}
//				break;
//		}
//		if (t == 0) {
//			t = max_Green;
//			j = max_Yellow;
//			test = 0;
//		}
//		if (dem == 0) {
//			counter++;
//		}
//		if (counter == max_Red) {
//			bool = 1;
//			counter = 0;
//			i = max_Red;
//			t = max_Green;
//			test = 1;
//		}
//		break;
//
//	case 1:
//		LED_RED_2();
//		if (random == 1) {
//			display7SEG_1(i / 10);
//		} else {
//			display7SEG_1(i % 10);
//		}
//		if (dem == 0) {
//			i--;
//		}
//		switch (test) {
//			case 1:
//				LED_GREEN_1();
//				if (random == 1) {
//					display7SEG(t / 10);
//				} else {
//					display7SEG(t % 10);
//				}
//				if (dem == 0) {
//					t--;
//				}
//				break;
//			default:
//				LED_YELLOW_1();
//				if (random == 1) {
//					display7SEG(j / 10);
//				} else {
//					display7SEG(j % 10);
//				}
//				if (dem == 0) {
//					j--;
//				}
//				break;
//		}
//		if (t == 0) {
//			t = max_Green;
//			j = max_Yellow;
//			test = 0;
//		}
//		if (dem == 0) {
//			counter++;
//		}
//		if (counter == max_Red) {
//			bool = 0;
//			counter = 0;
//			i = max_Red;
//			t = max_Green;
//			test = 1;
//		}
//		break;
//	}
}

int case2(int mode,int a,
		GPIO_TypeDef* D0_PORT, uint16_t D0_PIN, GPIO_TypeDef* D1_PORT, uint16_t D1_PIN,
		GPIO_TypeDef* D2_PORT, uint16_t D2_PIN, GPIO_TypeDef* D3_PORT, uint16_t D3_PIN,
		GPIO_TypeDef* D4_PORT, uint16_t D4_PIN, GPIO_TypeDef* D5_PORT, uint16_t D5_PIN){
	setup_Led7SEG();
	HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 0);
	HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);

	HAL_GPIO_WritePin(D0_PORT, D0_PIN, turn);
	HAL_GPIO_WritePin(D1_PORT, D1_PIN, turn);
	HAL_GPIO_WritePin(D2_PORT, D2_PIN, 0);
	HAL_GPIO_WritePin(D3_PORT, D3_PIN, 0);
	HAL_GPIO_WritePin(D4_PORT, D4_PIN, 0);
	HAL_GPIO_WritePin(D5_PORT, D5_PIN, 0);
	display7SEG_1(mode + 1);
	if(timer_flag[1] == 1){
		switch(turn){
		case 0:
			turn = 1;
		case 1:
			turn = 0;
		}
	  setTimer(1, 50);
	}
	if(button_flag[1] == 1){
	  button_flag[1] = 0;
	  a++;
	}
	if(button_flag[2] == 1){
	  button_flag[2] = 0;
	  switch(mode){
	  case 1:
		  max_Red = a;
		  break;
	  case 2:
		  max_Yellow = a;
		  break;
	  case 3:
		  max_Green = a;
		  break;
	  }
	}
	if(button_flag[3] == 1){
	  button_flag[3] = 0;
	  a--;
	}
	if(a > 99) a = 0;
	if(a < 0) a = 99;
	if(random == 1)
	  display7SEG(a / 10);
	else
	  display7SEG(a % 10);
	return a;
}
