/*
 * fsm_automatic.c
 *
 *  Created on: 27 Oct 2024
 *      Author: PC
 */

#include "fsm_automatic.h"

int bool = 0;
int counter = 0;
int a = 0, b = 1;
int i = 5, j = 2, t = 3;
int test = 1, random = 1, dem = 10;
int max_Red = 5, max_Yellow = 2, max_Green = 3, turn = 0;

GPIO_TypeDef* GPIO_Led_1[3] = {LED_RED_1_GPIO_Port, LED_YELLOW_1_GPIO_Port, LED_GREEN_1_GPIO_Port};
uint16_t Pin_Led_1[3] = {LED_RED_1_Pin, LED_YELLOW_1_Pin, LED_GREEN_1_Pin};
GPIO_TypeDef* GPIO_Led_2[3] = {LED_RED_2_GPIO_Port, LED_YELLOW_2_GPIO_Port, LED_GREEN_2_GPIO_Port};
uint16_t Pin_Led_2[3] = {LED_RED_2_Pin, LED_YELLOW_2_Pin, LED_GREEN_2_Pin};

void case1() {
	setup_Led7SEG();

	if(a == 0){
		LED_RED_1();
		if (random == 1) {
			display7SEG(i / 10);
		} else {
			display7SEG(i % 10);
		}
		i--;
		if(i == 0){
			i = max_Red;
			a++;
		}
	}
	if(a == 1){
		LED_YELLOW_1();
		if (random == 1) {
			display7SEG(j / 10);
		} else {
			display7SEG(j % 10);
		}
		j--;
		if(j == 0){
			j = max_Yellow;
			a++;
		}
	}
	if(a == 2){
		LED_GREEN_1();
		if (random == 1) {
			display7SEG(t / 10);
		} else {
			display7SEG(t % 10);
		}
		t--;
		if(t == 0){
			t = max_Green;
			a++;
		}
	}
	if(b == 0){
		LED_RED_2();
		if (random == 1) {
			display7SEG_1(i / 10);
		} else {
			display7SEG_1(i % 10);
		}
		i--;
		if(i == 0){
			i = max_Red;
			b++;
		}
	}
	if(b == 1){
		LED_GREEN_2();
		if (random == 1) {
			display7SEG_1(j / 10);
		} else {
			display7SEG_1(j % 10);
		}
		j--;
		if(j == 0){
			j = max_Yellow;
			b++;
		}
	}
	if(b == 2){
		LED_YELLOW_2();
		if (random == 1) {
			display7SEG_1(t / 10);
		} else {
			display7SEG_1(t % 10);
		}
		t--;
		if(t == 0){
			t = max_Green;
			b++;
		}
	}
	if(a == 3){
		a = 0;
	}
	if(b == 3){
		b = 0;
	}
}

int case2(int mode,int a,
		GPIO_TypeDef* D0_PORT, uint16_t D0_PIN, GPIO_TypeDef* D1_PORT, uint16_t D1_PIN,
		GPIO_TypeDef* D2_PORT, uint16_t D2_PIN, GPIO_TypeDef* D3_PORT, uint16_t D3_PIN,
		GPIO_TypeDef* D4_PORT, uint16_t D4_PIN, GPIO_TypeDef* D5_PORT, uint16_t D5_PIN){
	setup_Led7SEG();
	HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 0);
	HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);

	HAL_GPIO_WritePin(D0_PORT, D0_PIN, turn);
	HAL_GPIO_WritePin(D1_PORT, D1_PIN, turn);
	HAL_GPIO_WritePin(D2_PORT, D2_PIN, 0);
	HAL_GPIO_WritePin(D3_PORT, D3_PIN, 0);
	HAL_GPIO_WritePin(D4_PORT, D4_PIN, 0);
	HAL_GPIO_WritePin(D5_PORT, D5_PIN, 0);
	display7SEG_1(mode + 1);
	if(timer_flag[1] == 1){
		switch(turn){
		case 0:
			turn = 1;
		case 1:
			turn = 0;
		}
	  setTimer(1, 50);
	}
	if(button_flag[1] == 1){
	  button_flag[1] = 0;
	  a++;
	}
	if(button_flag[2] == 1){
	  button_flag[2] = 0;
	  switch(mode){
	  case 1:
		  max_Red = a;
		  break;
	  case 2:
		  max_Yellow = a;
		  break;
	  case 3:
		  max_Green = a;
		  break;
	  }
	}
	if(button_flag[3] == 1){
	  button_flag[3] = 0;
	  a--;
	}
	if(a > 99) a = 0;
	if(a < 0) a = 99;
	if(random == 1)
	  display7SEG(a / 10);
	else
	  display7SEG(a % 10);
	return a;
}
